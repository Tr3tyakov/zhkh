""" -auto

Revision ID: c6164a604c1f
Revises: 67d5064683c9
Create Date: 2025-08-20 01:31:49.098718+03:00

"""

from typing import (
    Sequence,
    Union,
)

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c6164a604c1f"
down_revision: Union[str, None] = "67d5064683c9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute(
        """
         UPDATE house 
         SET heating_network_material = NULL 
         WHERE heating_network_material IS NOT NULL 
         AND heating_network_material !~ '^\\d+$'
     """
    )
    op.execute(
        """
             UPDATE house 
             SET heating_insulation_material = NULL 
             WHERE heating_insulation_material IS NOT NULL 
             AND heating_insulation_material !~ '^\\d+$'
         """
    )
    op.execute(
        """
                 UPDATE house 
                 SET heating_riser_material = NULL 
                 WHERE heating_riser_material IS NOT NULL 
                 AND heating_riser_material !~ '^\\d+$'
             """
    )
    op.execute(
        """
                 UPDATE house 
                 SET cold_water_network_material = NULL 
                 WHERE cold_water_network_material IS NOT NULL 
                 AND cold_water_network_material !~ '^\\d+$'
             """
    )
    op.execute(
        """
                 UPDATE house 
                 SET cold_water_riser_material = NULL 
                 WHERE cold_water_riser_material IS NOT NULL 
                 AND cold_water_riser_material !~ '^\\d+$'
             """
    )
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "house",
        "heating_network_material",
        existing_type=sa.VARCHAR(),
        type_=sa.Integer(),
        existing_comment="Материал сети отопления",
        postgresql_using="heating_network_material::integer",
        existing_nullable=True,
    )
    op.alter_column(
        "house",
        "heating_insulation_material",
        existing_type=sa.VARCHAR(),
        type_=sa.Integer(),
        existing_comment="Материал теплоизоляции сети отопления",
        postgresql_using="heating_insulation_material::integer",
        existing_nullable=True,
    )
    op.alter_column(
        "house",
        "heating_riser_material",
        existing_type=sa.VARCHAR(),
        type_=sa.Integer(),
        existing_comment="Материал стояков отопления",
        postgresql_using="heating_riser_material::integer",
        existing_nullable=True,
    )
    op.alter_column(
        "house",
        "cold_water_network_material",
        existing_type=sa.VARCHAR(),
        type_=sa.Integer(),
        existing_comment="Материал сети ХВС",
        postgresql_using="cold_water_network_material::integer",
        existing_nullable=True,
    )
    op.alter_column(
        "house",
        "cold_water_riser_material",
        existing_type=sa.VARCHAR(),
        type_=sa.Integer(),
        existing_comment="Материал стояков ХВС",
        postgresql_using="cold_water_riser_material::integer",
        existing_nullable=True,
    )
    op.create_foreign_key(
        "heating_insulation_material",
        "house",
        "reference_book_value",
        ["heating_insulation_material"],
        ["id"],
    )
    op.create_foreign_key(
        "cold_water_network_material",
        "house",
        "reference_book_value",
        ["cold_water_network_material"],
        ["id"],
    )
    op.create_foreign_key(
        "heating_riser_material",
        "house",
        "reference_book_value",
        ["heating_riser_material"],
        ["id"],
    )
    op.create_foreign_key(
        "heating_network_material",
        "house",
        "reference_book_value",
        ["heating_network_material"],
        ["id"],
    )
    op.create_foreign_key(
        "cold_water_riser_material",
        "house",
        "reference_book_value",
        ["cold_water_riser_material"],
        ["id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("heating_insulation_material", "house", type_="foreignkey")
    op.drop_constraint("cold_water_network_material", "house", type_="foreignkey")
    op.drop_constraint("heating_riser_material", "house", type_="foreignkey")
    op.drop_constraint("heating_network_material", "house", type_="foreignkey")
    op.drop_constraint("cold_water_riser_material", "house", type_="foreignkey")
    op.alter_column(
        "house",
        "cold_water_riser_material",
        existing_type=sa.Integer(),
        type_=sa.VARCHAR(),
        existing_comment="Материал стояков ХВС",
        postgresql_using="cold_water_riser_material::text",
        existing_nullable=True,
    )
    op.alter_column(
        "house",
        "cold_water_network_material",
        existing_type=sa.Integer(),
        type_=sa.VARCHAR(),
        existing_comment="Материал сети ХВС",
        postgresql_using="cold_water_network_material::text",
        existing_nullable=True,
    )
    op.alter_column(
        "house",
        "heating_riser_material",
        existing_type=sa.Integer(),
        type_=sa.VARCHAR(),
        existing_comment="Материал стояков отопления",
        postgresql_using="heating_riser_material::text",
        existing_nullable=True,
    )
    op.alter_column(
        "house",
        "heating_insulation_material",
        existing_type=sa.Integer(),
        type_=sa.VARCHAR(),
        existing_comment="Материал теплоизоляции сети отопления",
        postgresql_using="heating_insulation_material::text",
        existing_nullable=True,
    )
    op.alter_column(
        "house",
        "heating_network_material",
        existing_type=sa.Integer(),
        type_=sa.VARCHAR(),
        existing_comment="Материал сети отопления",
        postgresql_using="heating_network_material::text",
        existing_nullable=True,
    )
    # ### end Alembic commands ###
