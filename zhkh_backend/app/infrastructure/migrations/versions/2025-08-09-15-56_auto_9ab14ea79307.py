""" -auto

Revision ID: 9ab14ea79307
Revises: 
Create Date: 2025-08-09 15:56:52.159806+03:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9ab14ea79307'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file',
    sa.Column('file_name', sa.String(), nullable=False, comment='Имя файла'),
    sa.Column('file_key', sa.String(), nullable=False, comment='Ключ S3'),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('extension', sa.String(), nullable=False, comment='Расширение файла'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата создания'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор объекта'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_key'),
    comment='Файл'
    )
    op.create_table('reference_book',
    sa.Column('name', sa.String(), nullable=False, comment='Наименование справочника'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор объекта'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    comment='Справочник'
    )
    op.create_table('user',
    sa.Column('first_name', sa.String(), nullable=False, comment='Имя пользователя'),
    sa.Column('middle_name', sa.String(), nullable=False, comment='Фамилия пользователя'),
    sa.Column('last_name', sa.String(), nullable=False, comment='Отчество пользователя'),
    sa.Column('email', sa.String(), nullable=False, comment='Почта пользователя'),
    sa.Column('password', sa.String(), nullable=False, comment='Пароль пользователя'),
    sa.Column('last_login_date', sa.DateTime(), nullable=False, comment='Дата последнего входа'),
    sa.Column('user_type', sa.Enum('USER', 'ADMIN', name='usertypeenum'), nullable=False, comment='Тип пользователя'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата создания'),
    sa.Column('file_key', sa.String(), nullable=True, comment='Ключ файла аватара пользователя в S3 хранилище'),
    sa.Column('account_status', sa.Enum('ACTIVE', 'BLOCKED', name='useraccountstatusenum'), nullable=False, comment='Статус аккаунта пользователя'),
    sa.Column('private_phone', sa.String(), nullable=True, comment='Личный телефон'),
    sa.Column('work_phone', sa.String(), nullable=True, comment='Рабочий телефон'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор объекта'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    comment='Пользователь'
    )
    op.create_table('audit_log',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('log_type', sa.Enum('EDIT', 'DELETE', 'ENTER_TO_SYSTEM', 'EXPORT_DATA', 'CREATE', 'ATTACH', 'UNTIE', name='logtypeenum'), nullable=False, comment='Тип лога'),
    sa.Column('entity_type', sa.Enum('HOUSE', 'COMPANY', 'USER', 'DATA', name='entitytypeenum'), nullable=False, comment='Тип сущности'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('object_id', sa.Integer(), nullable=True, comment='Идентификатор объекта действия'),
    sa.Column('description', sa.Text(), nullable=True, comment='Детали действия'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='IP-адрес пользователя'),
    sa.Column('user_agent', sa.Text(), nullable=True, comment='User-Agent пользователя'),
    sa.Column('action_result', sa.String(), nullable=True, comment="Результат действия (например, 'успешно', 'ошибка')"),
    sa.Column('log_metadata', sa.Text(), nullable=True, comment='Дополнительные метаданные в JSON или текстовом формате'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор объекта'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Лог'
    )
    op.create_table('company',
    sa.Column('name', sa.String(length=255), nullable=False, comment='Название УК'),
    sa.Column('legal_form', sa.String(length=100), nullable=True, comment='Форма организации (ООО, АО)'),
    sa.Column('inn', sa.String(length=12), nullable=True, comment='ИНН'),
    sa.Column('address', sa.Text(), nullable=True, comment='# Юридический адрес'),
    sa.Column('phone', sa.String(length=50), nullable=True, comment='Телефон'),
    sa.Column('email', sa.String(length=255), nullable=True, comment='Почта'),
    sa.Column('website', sa.String(length=255), nullable=True, comment='Сайт'),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата создания'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Дата обновления'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор объекта'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('inn'),
    comment='Компания'
    )
    op.create_table('reference_book_value',
    sa.Column('value', sa.String(), nullable=False, comment='значение справочника'),
    sa.Column('reference_book_id', sa.Integer(), nullable=False, comment='Идентификатор справочника'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор объекта'),
    sa.ForeignKeyConstraint(['reference_book_id'], ['reference_book.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Значение справочника'
    )
    op.create_table('house',
    sa.Column('region', sa.String(), nullable=True, comment='Регион'),
    sa.Column('city', sa.String(), nullable=True, comment='Населённый пункт'),
    sa.Column('street', sa.String(), nullable=True, comment='Улица'),
    sa.Column('house_number', sa.String(), nullable=True, comment='Номер дома'),
    sa.Column('building', sa.String(), nullable=True, comment='Корпус'),
    sa.Column('commissioning_year', sa.Integer(), nullable=True, comment='Год ввода в эксплуатацию'),
    sa.Column('is_emergency', sa.Boolean(), nullable=True, comment='Признан ли дом аварийным'),
    sa.Column('condition', sa.String(), nullable=True, comment='Состояние дома'),
    sa.Column('apartments_count', sa.Integer(), nullable=True, comment='Количество квартир'),
    sa.Column('non_residential_units_count', sa.Integer(), nullable=True, comment='Количество нежилых помещений'),
    sa.Column('energy_efficiency_class', sa.Integer(), nullable=True, comment='Класс энергетической эффективности'),
    sa.Column('energy_survey_date', sa.Date(), nullable=True, comment='Дата проведения энергетического обследования'),
    sa.Column('entrances_count', sa.Integer(), nullable=True, comment='Количество подъездов'),
    sa.Column('max_floors_count', sa.Integer(), nullable=True, comment='Наибольшее количество этажей'),
    sa.Column('min_floors_count', sa.Integer(), nullable=True, comment='Наименьшее количество этажей'),
    sa.Column('underground_floors_count', sa.Integer(), nullable=True, comment='Количество подземных этажей'),
    sa.Column('capital_repair_fund', sa.Integer(), nullable=True, comment='Формирование фонда капитального ремонта'),
    sa.Column('parking_area', sa.Float(), nullable=True, comment='Площадь парковки, м²'),
    sa.Column('has_accessibility', sa.Integer(), nullable=True, comment='Наличие приспособлений для маломобильных групп населения'),
    sa.Column('house_type', sa.Integer(), nullable=True, comment='Тип дома'),
    sa.Column('building_wear_percent', sa.Float(), nullable=True, comment='Износ здания, %'),
    sa.Column('building_wear_date', sa.DateTime(), nullable=True, comment='Дата установления износа'),
    sa.Column('total_area', sa.Float(), nullable=True, comment='Площадь многоквартирного дома, м²'),
    sa.Column('residential_area', sa.Float(), nullable=True, comment='Площадь жилых помещений, м²'),
    sa.Column('non_residential_area', sa.Float(), nullable=True, comment='Площадь нежилых помещений, м²'),
    sa.Column('common_property_area', sa.Float(), nullable=True, comment='Площадь общего имущества, м²'),
    sa.Column('land_area', sa.Float(), nullable=True, comment='Площадь земельного участка, м²'),
    sa.Column('building_series', sa.Integer(), nullable=True, comment='Серия/тип постройки здания'),
    sa.Column('is_cultural_heritage', sa.Integer(), nullable=True, comment='Является ли объектом культурного наследия'),
    sa.Column('ventilation', sa.Integer(), nullable=True, comment='Тип вентиляции'),
    sa.Column('sewerage', sa.Integer(), nullable=True, comment='Система водоотведения'),
    sa.Column('drainage_system', sa.Integer(), nullable=True, comment='Система водостоков'),
    sa.Column('gas_supply', sa.Integer(), nullable=True, comment='Система газоснабжения'),
    sa.Column('hot_water_supply', sa.Integer(), nullable=True, comment='Система горячего водоснабжения'),
    sa.Column('fire_suppression', sa.Integer(), nullable=True, comment='Система пожаротушения'),
    sa.Column('heating', sa.Integer(), nullable=True, comment='Система теплоснабжения'),
    sa.Column('cold_water_supply', sa.Integer(), nullable=True, comment='Система холодного водоснабжения'),
    sa.Column('electricity_supply', sa.Integer(), nullable=True, comment='Система электроснабжения'),
    sa.Column('number_of_inputs', sa.Integer(), nullable=True, comment='Количество вводов в дом, ед.'),
    sa.Column('garbage_chute_type', sa.Integer(), nullable=True, comment='Тип мусоропровода'),
    sa.Column('garbage_chute', sa.Boolean(), nullable=True, comment='Наличие мусоропровода'),
    sa.Column('load_bearing_walls', sa.Integer(), nullable=True, comment='Материал несущих стен'),
    sa.Column('basement_area', sa.Float(), nullable=True, comment='Площадь подвала, м²'),
    sa.Column('foundation_type', sa.Integer(), nullable=True, comment='Тип фундамента'),
    sa.Column('foundation_material', sa.Integer(), nullable=True, comment='Материал фундамента'),
    sa.Column('blind_area', sa.Float(), nullable=True, comment='Площадь отмостки, м²'),
    sa.Column('overlap_type', sa.Integer(), nullable=True, comment='Тип перекрытий'),
    sa.Column('hot_water_system_type', sa.Integer(), nullable=True, comment='Тип системы ГВС'),
    sa.Column('hot_water_physical_wear', sa.Float(), nullable=True, comment='Физический износ системы ГВС'),
    sa.Column('hot_water_network_material', sa.Integer(), nullable=True, comment='Материал сети ГВС'),
    sa.Column('hot_water_insulation_material', sa.Integer(), nullable=True, comment='Материал теплоизоляции сети ГВС'),
    sa.Column('hot_water_riser_material', sa.Integer(), nullable=True, comment='Материал стояков ГВС'),
    sa.Column('sewerage_system_type', sa.Integer(), nullable=True, comment='Тип системы водоотведения'),
    sa.Column('sewerage_network_material', sa.String(), nullable=True, comment='Материал сети водоотведения'),
    sa.Column('gas_system_type', sa.Integer(), nullable=True, comment='Тип системы газоснабжения'),
    sa.Column('internal_walls_type', sa.Integer(), nullable=True, comment='Тип внутренних стен'),
    sa.Column('facade_wall_type', sa.Integer(), nullable=True, comment='Тип наружных стен'),
    sa.Column('facade_insulation_type', sa.Integer(), nullable=True, comment='Тип наружного утепления фасада'),
    sa.Column('facade_finishing_material', sa.Integer(), nullable=True, comment='Материал отделки фасада'),
    sa.Column('facade_last_major_repair_year', sa.Integer(), nullable=True, comment='Год последнего капремонта фасада'),
    sa.Column('roof_shape', sa.Integer(), nullable=True, comment='Форма крыши'),
    sa.Column('attic_insulation_layers', sa.Integer(), nullable=True, comment='Утепляющие слои чердачных перекрытий'),
    sa.Column('roof_support_structure_type', sa.Integer(), nullable=True, comment='Вид несущей части крыши'),
    sa.Column('roof_covering_type', sa.Integer(), nullable=True, comment='Тип кровли'),
    sa.Column('roof_last_major_repair_year', sa.Integer(), nullable=True, comment='Год последнего капремонта кровли'),
    sa.Column('window_material', sa.Integer(), nullable=True, comment='Материал окон'),
    sa.Column('heating_physical_wear', sa.Float(), nullable=True, comment='Физический износ системы отопления'),
    sa.Column('heating_network_material', sa.String(), nullable=True, comment='Материал сети отопления'),
    sa.Column('heating_insulation_material', sa.String(), nullable=True, comment='Материал теплоизоляции сети отопления'),
    sa.Column('heating_riser_layout_type', sa.Integer(), nullable=True, comment='Тип разводки стояков отопления'),
    sa.Column('heating_riser_material', sa.String(), nullable=True, comment='Материал стояков отопления'),
    sa.Column('heating_riser_valve_wear', sa.Float(), nullable=True, comment='Физический износ запорной арматуры отопления'),
    sa.Column('heating_device_type', sa.Integer(), nullable=True, comment='Тип отопительных приборов'),
    sa.Column('heating_device_wear', sa.Float(), nullable=True, comment='Физический износ отопительных приборов'),
    sa.Column('cold_water_physical_wear', sa.Float(), nullable=True, comment='Физический износ системы ХВС'),
    sa.Column('cold_water_network_material', sa.String(), nullable=True, comment='Материал сети ХВС'),
    sa.Column('cold_water_riser_wear', sa.Float(), nullable=True, comment='Физический износ стояков ХВС'),
    sa.Column('cold_water_riser_material', sa.String(), nullable=True, comment='Материал стояков ХВС'),
    sa.Column('cold_water_valve_wear', sa.Float(), nullable=True, comment='Физический износ запорной арматуры ХВС'),
    sa.Column('hot_water_riser_wear', sa.Float(), nullable=True, comment='Физический износ стояков ГВС'),
    sa.Column('hot_water_valve_wear', sa.Float(), nullable=True, comment='Физический износ запорной арматуры ГВС'),
    sa.Column('note', sa.Text(), nullable=True, comment='Дополнительное примечание'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата создания'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Дата обновления'),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор объекта'),
    sa.ForeignKeyConstraint(['attic_insulation_layers'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['building_series'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['capital_repair_fund'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['cold_water_supply'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['drainage_system'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['electricity_supply'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['energy_efficiency_class'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['facade_finishing_material'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['facade_insulation_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['facade_wall_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['fire_suppression'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['foundation_material'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['foundation_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['garbage_chute_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['gas_supply'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['gas_system_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['has_accessibility'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['heating'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['heating_device_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['heating_riser_layout_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['hot_water_insulation_material'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['hot_water_network_material'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['hot_water_riser_material'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['hot_water_supply'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['hot_water_system_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['house_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['internal_walls_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['is_cultural_heritage'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['load_bearing_walls'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['overlap_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['roof_covering_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['roof_shape'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['roof_support_structure_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['sewerage'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['sewerage_system_type'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ventilation'], ['reference_book_value.id'], ),
    sa.ForeignKeyConstraint(['window_material'], ['reference_book_value.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Модель дома/недвижимости'
    )
    op.create_index(op.f('ix_house_region'), 'house', ['region'], unique=False)
    op.create_table('house_file_m2_m',
    sa.Column('category', sa.Enum('INSPECTION_RESULT', 'TECHNICAL_PASSPORT', 'DESIGN_DOCUMENTATION', 'CAPITAL_REPAIR_PROJECT', name='filecategoryenum'), nullable=False, comment='Категория файла'),
    sa.Column('house_id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор объекта'),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['house_id'], ['house.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='M2m таблица дома и файла'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('house_file_m2_m')
    op.drop_index(op.f('ix_house_region'), table_name='house')
    op.drop_table('house')
    op.drop_table('reference_book_value')
    op.drop_table('company')
    op.drop_table('audit_log')
    op.drop_table('user')
    op.drop_table('reference_book')
    op.drop_table('file')
    # ### end Alembic commands ###
