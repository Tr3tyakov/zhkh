""" -auto

Revision ID: 67d5064683c9
Revises: 6540518ec31f
Create Date: 2025-08-20 01:18:29.044501+03:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '67d5064683c9'
down_revision: Union[str, None] = '6540518ec31f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.execute("""
        UPDATE house 
        SET sewerage_network_material = NULL 
        WHERE sewerage_network_material IS NOT NULL 
        AND sewerage_network_material !~ '^\\d+$'
    """)

    # Изменяем тип с явным преобразованием
    op.alter_column('house', 'sewerage_network_material',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_comment='Материал сети водоотведения',
               existing_nullable=True,
               postgresql_using='sewerage_network_material::integer')

    # Создаем foreign key constraint
    op.create_foreign_key(
        "reference_book_value__sewerage_network_material",
        'house',
        'reference_book_value',
        ['sewerage_network_material'],
        ['id']
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("reference_book_value__sewerage_network_material", 'house', type_='foreignkey')

    # При откате также нужно явное преобразование
    op.alter_column('house', 'sewerage_network_material',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_comment='Материал сети водоотведения',
               existing_nullable=True,
               postgresql_using='sewerage_network_material::text')
    # ### end Alembic commands ###